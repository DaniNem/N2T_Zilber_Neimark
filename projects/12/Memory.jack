// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * This library provides two services: direct access to the computer's main
 * memory (RAM), and allocation and recycling of memory blocks. The Hack RAM
 * consists of 32,768 words, each holding a 16-bit binary number.
 */ 
class Memory {
	static Array ram;
	static Array heap; 
	static Array freeList;

    /** Initializes the class. */
    function void init() {
    	let ram = 0;
    	let freeList = 2048;
    	let freeList[0] = 0;
    	let freeList[1] = 14335;
    	let heap = 2048;  
    	let heap[0] = 0;
    	let heap[1] = 14335;
    	return;
    }

    /** Returns the RAM value at the given address. */
    function int peek(int address) {
    	return ram[address];
    }

    /** Sets the RAM value at the given address to the given value. */
    function void poke(int address, int value) {
    	let ram[address] = value;
    	return;
    }

    /** Finds an available RAM block of the given size and returns
     *  a reference to its base address. */
    function int alloc(int size) {
    	var Array current;
    	var Array prev;
    	var Array addr;
    	let prev = heap;
    	let current = heap;

    	while(current[1] < size){ // go over till find free segment
    		if(current[0] = 0){
    			return -1;
    		}
    		let prev = current;
    		let current = current[0];
    	}
    	if(current[1] > (size + 2)){ // check if can use portion of segemtn
    		let addr = current + current[1] - size;
    		let addr[-1] = size;
    		let current[1] = current[1] - size - 2;
    		return addr;
    	}
        if(prev = current){ // check if first segment
            let heap = heap[0];
        } else {
    	   let prev[0] = current[0];
        }   
    	let addr = current + 2;
    	let addr[-1] = size; // update size
    	return addr;
    }

    /** De-allocates the given object (cast as an array) by making
     *  it available for future allocations. */
    function void deAlloc(Array o) {
    	let o[-2] = heap; // add to beginning of the list
    	let heap = o-2; 
    	return;
    }    
}
